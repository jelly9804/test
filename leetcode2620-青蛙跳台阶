//这题用普通的递归会超时，需要用记忆递归法，用一个数组存储已经滤过的结果
//下面这个方法是用动态规划，从第一个数开始，利用之前的结果，输出现在的结果。
//记得需要取模

class Solution {
    public int numWays(int n) {
        int result[] = new int[Math.max(n+1,3)];
        result[0] = 1;
        result[1] = 1;
        result[2] = 2;
        for(int i=3;i<n+1;i++){
            result[i]= (result[i-1] + result[i-2])%1000000007;
        } 
        return result[n];

    }
}
