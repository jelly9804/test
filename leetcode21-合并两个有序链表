/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode mergeTwoLists(ListNode list1, ListNode list2) {
        ListNode pre = new ListNode();
        ListNode cur = pre;                            //只需要定义一个不会动的node来指向最终的答案
        
        
        while(list1 != null && list2 != null){
            if(list1.val > list2.val){
                cur.next =list2;
                list2 = list2.next;
                cur = cur.next;                    //这一步不要忘记，不然cur就一直在刷新；
            }else{
                cur.next = list1;
                list1 = list1.next;
                cur = cur.next;
            }
        }
        if(list1 != null){
            cur.next = list1;                    //直接把所有的剩余node添加在cur后面。
           
        }
        if(list2 != null){
            cur.next = list2;
           
        }
        
    return pre.next;
    }
}
