给你一个长度为 n 的整数数组，每次操作将会使 n - 1 个元素增加 1 。返回让数组所有元素相等的最小操作次数。

输入：nums = [1,2,3]
输出：3
解释：
只需要3次操作（注意每次操作会增加两个元素的值）：
[1,2,3]  =>  [2,3,3]  =>  [3,4,3]  =>  [4,4,4]

//
这题很有意思，逆向思维能很快得出答案。
每次操作都会使n-1个元素增加1，那么反之，每次的操作都会令一个数-1.
那么我们只需要计算数组内最小的那个数和其他数的差值，并且相加就好了。
但是需要单独遍历一遍求出最小值
还有一种方法，就是用全部数的sum - 最后得出的最小值 * 数组size
//


public int minMoves(int[] nums) {
        int sum = 0;
        int min = Integer.MAX_VALUE;
        for(int i = 0; i < nums.length; i++){
            min = Math.min(min,nums[i]);
            sum += nums[i];
        }
        return sum - min*nums.length;
